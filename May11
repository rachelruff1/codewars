7 kyu Two to One

Take 2 strings s1 and s2 including only letters from ato z. Return a new sorted string, the longest possible, containing distinct letters,

each taken only once - coming from s1 or s2. #Examples: ``` a = "xyaabbbccccdefww" b = "xxxxyyyyabklmopq" longest(a, b) -> "abcdefklmopqwxy"
a = "abcdefghijklmnopqrstuvwxyz" longest(a, a) -> "abcdefghijklmnopqrstuvwxyz" ```



//MY SOLUTION
function longest(s1, s2) {
    let newStr = `${s1}${s2}`;
    let arr = newStr.split('');
    let unique = [...new Set(arr.map(x => x))];
    return unique.sort().join('');
  }

//ONE LINER
  const longest = (s1, s2) => [...new Set(s1+s2)].sort().join('')


//Notable func-- Array.from can create an array from a string. 
//ex: console.log(Array.from('foo'));      expected output: Array ["f", "o", "o"]

function longest(s1, s2) {
  return Array.from(new Set(s1 + s2)).sort().join('');
}